/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import java.util.ArrayList;
import java.util.List;
import queries.Client;
import javax.swing.JOptionPane;

/**
 *
 * @author Rica Mae
 */
public class ClientSignUp extends javax.swing.JFrame {
    Client client = new Client();
    private String meterType = "";
    private int meterCount = 0;
    private int submeterCount = 0;
    private List<String> comMeterNames;
    private List<String> bulkSubmeterNames;
    private String primaryMeterName;
    
    public ClientSignUp() {
        initComponents();
       comMeterNames = new ArrayList<>(); 
       bulkSubmeterNames = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        contactnoField = new javax.swing.JTextField();
        passField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        selectLoc = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        meternameField = new javax.swing.JTextField();
        meterSummaryLabel = new javax.swing.JLabel();
        totalMeterLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        addmeterButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        selectMeterType = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        submeternameField = new javax.swing.JTextField();
        submetersSummary = new javax.swing.JLabel();
        totalSubmeters = new javax.swing.JLabel();
        addSubmeterButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CLIENT SIGN UP");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 302, 73));
        jPanel1.add(nameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 315, 30));
        jPanel1.add(contactnoField, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 315, 30));
        jPanel1.add(passField, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 191, 315, 30));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CLIENT NAME");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 117, 96, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("CONTACT NUMBER");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 145, 115, 41));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("PASSWORD");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 196, 96, 21));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ADDRESS");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 233, 96, 41));

        selectLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Barangay 11", "Barangay 12", "Bucana", "Wawa" }));
        jPanel1.add(selectLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 238, 315, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("METERS");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 288, 79, 26));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("METER NAME");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 368, 84, 26));

        meternameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meternameFieldActionPerformed(evt);
            }
        });
        jPanel1.add(meternameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 408, 230, 39));

        meterSummaryLabel.setForeground(new java.awt.Color(255, 255, 255));
        meterSummaryLabel.setText("SUMMARY");
        jPanel1.add(meterSummaryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 488, 160, 79));

        totalMeterLabel.setForeground(new java.awt.Color(255, 255, 255));
        totalMeterLabel.setText("TOTAL METERS:");
        jPanel1.add(totalMeterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 458, 160, -1));

        cancelButton.setText("CANCEL");
        jPanel1.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 95, 35));

        submitButton.setText("SUBMIT");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, 105, 35));

        addmeterButton.setText("ADD METER");
        addmeterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addmeterButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addmeterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 578, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("CLIENT INFORMATION");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 79, 163, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("METER TYPE");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 328, 84, 29));

        selectMeterType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Residential", "Commercial", "Bulk" }));
        selectMeterType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectMeterTypeActionPerformed(evt);
            }
        });
        jPanel1.add(selectMeterType, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 328, 315, 30));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("SUBMETER NAME");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 378, -1, -1));
        jPanel1.add(submeternameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 408, 260, 40));

        submetersSummary.setForeground(new java.awt.Color(255, 255, 255));
        submetersSummary.setText("SUMMARY");
        jPanel1.add(submetersSummary, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 508, 250, 40));

        totalSubmeters.setForeground(new java.awt.Color(255, 255, 255));
        totalSubmeters.setText("TOTAL SUBMETERS:");
        jPanel1.add(totalSubmeters, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 468, 220, -1));

        addSubmeterButton.setText("ADD SUBMETER");
        addSubmeterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubmeterButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addSubmeterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 566, 122, 35));

        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\Nhel Hernadez\\Downloads\\website design (1) (2).png")); // NOI18N
        jLabel11.setText("jLabel11");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -60, 830, 560));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wbs_2103/src/icons/website design (1) (1).png"))); // NOI18N
        jLabel13.setText("jLabel13");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 830, 170));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectMeterTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectMeterTypeActionPerformed
        String meterType = (String) selectMeterType.getSelectedItem();

        if (meterType.equals("Residential")) {
            meternameField.setEnabled(false);
            addmeterButton.setEnabled(false);
            submeternameField.setEnabled(false);
            addSubmeterButton.setEnabled(false);
        } else if (meterType.equals("Commercial")) {
            meternameField.setEnabled(true);
            addmeterButton.setEnabled(true);
            submeternameField.setEnabled(false);
            addSubmeterButton.setEnabled(false);
        } else if (meterType.equals("Bulk")) {
            meternameField.setEnabled(false);  // Primary meter
            addmeterButton.setEnabled(false);
            submeternameField.setEnabled(true);  // Submeters
            addSubmeterButton.setEnabled(true);
        }
    }//GEN-LAST:event_selectMeterTypeActionPerformed

    private void addmeterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addmeterButtonActionPerformed
        String meterType = (String) selectMeterType.getSelectedItem();
        String meterName = meternameField.getText().trim();

        if (meterType.equals("Commercial")) {
            if (!meterName.isEmpty()) {
                comMeterNames.add(meterName);
                meterCount++;
                meternameField.setText("");
                updateMeterSummary();
            } else {
                JOptionPane.showMessageDialog(this, "Meter name cannot be empty!");
            }
        } else if (meterType.equals("Bulk")) {
            if (primaryMeterName == null) {
                primaryMeterName = meterName.isEmpty() ? "Main Meter" : meterName;
                meternameField.setText("");
                JOptionPane.showMessageDialog(this, "Primary meter set as: " + primaryMeterName);
            } else {
                if (!meterName.isEmpty()) {
                    bulkSubmeterNames.add(meterName);
                    meterCount++;
                    meternameField.setText("");
                    updateMeterSummary();
                } else {
                    JOptionPane.showMessageDialog(this, "Submeter name cannot be empty!");
                }
            }
        }

    }//GEN-LAST:event_addmeterButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        handleSubmit();
    }//GEN-LAST:event_submitButtonActionPerformed

    private void meternameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meternameFieldActionPerformed

    }//GEN-LAST:event_meternameFieldActionPerformed

    private void addSubmeterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubmeterButtonActionPerformed
        String submeterName = submeternameField.getText();

        if (!submeterName.isEmpty()) {
            bulkSubmeterNames.add(submeterName); // Save to the list of submeters
            submeterCount++;
            submeternameField.setText("");
            updateSubmeterSummary();
        } else {
            JOptionPane.showMessageDialog(this, "Submeter name cannot be empty!");
        }
    }//GEN-LAST:event_addSubmeterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    private void updateMeterSummary() {
        totalMeterLabel.setText("Total Meters: " + meterCount);

        StringBuilder summary = new StringBuilder("<html>Meter Summary:<br>");
        for (String meter : comMeterNames) {
            summary.append("- ").append(meter).append("<br>");
        }
        if (primaryMeterName != null) {
            summary.append("- Primary Meter: ").append(primaryMeterName).append("<br>");
        }
        for (String submeter : bulkSubmeterNames) {
            summary.append("- Submeter: ").append(submeter).append("<br>");
        }
        summary.append("</html>");

        meterSummaryLabel.setText(summary.toString());
    }
   
    private void updateSubmeterSummary() {
        StringBuilder summary = new StringBuilder("<html>Submeter Summary:<br>");
        for (String submeterName : bulkSubmeterNames) {
            summary.append("- ").append(submeterName).append("<br>");
        }
        summary.append("</html>");

        submetersSummary.setText(summary.toString()); // Update the JLabel for submeters
    }


    private void handleSubmit() {
        String clientName = nameField.getText().trim();
        String contactNumber = contactnoField.getText().trim();
        String password = passField.getText().trim();
        int addressID = selectLoc.getSelectedIndex() + 1;
        String meterType = (String) selectMeterType.getSelectedItem();

        if (clientName.isEmpty() || contactNumber.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Integer primaryMeterID = null; // Initialize primaryMeterID

        if (meterType.equals("Bulk") && (primaryMeterName == null || primaryMeterName.isEmpty())) {
            primaryMeterName = "Main Meter"; // Set default name if missing
        }

        // Insert the client first and retrieve clientID
        int clientID = client.insertClient(clientName, contactNumber, password, addressID, meterType);

        if (meterType.equals("Bulk")) {
            // Insert the primary meter and retrieve its ID
            primaryMeterID = client.insertMeter(clientID, primaryMeterName, "Primary");
            if (primaryMeterID == null) {
                JOptionPane.showMessageDialog(this, "Failed to insert primary meter.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Stop further processing
            }

            // Ensure at least one submeter is provided
            if (bulkSubmeterNames.isEmpty()) {
                JOptionPane.showMessageDialog(this, "At least one submeter name is required for Bulk meters.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Stop further processing
            }

            // Insert submeters using the retrieved primaryMeterID
            for (String submeterName : bulkSubmeterNames) {
                client.insertSubmeter(primaryMeterID, submeterName);
            }
        }


        if (meterType.equals("Residential")) {
            client.insertMeter(clientID, "Default Meter", "Residential");
        } else if (meterType.equals("Commercial")) {
            if (comMeterNames.isEmpty()) {
                JOptionPane.showMessageDialog(this, "At least one meter name is required for Commercial meters.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            for (String meterName : comMeterNames) {
                client.insertMeter(clientID, meterName, "Commercial");
            }
        }

        JOptionPane.showMessageDialog(
            this,
            "Client added successfully!\nGenerated Client ID: " + clientID,
            "Success",
            JOptionPane.INFORMATION_MESSAGE
        );

        clearForm();
    }

    private void clearForm() {
        nameField.setText("");
        contactnoField.setText("");
        passField.setText("");
        selectLoc.setSelectedIndex(0);
        selectMeterType.setSelectedIndex(0);
        meternameField.setText("");
        comMeterNames.clear();
        bulkSubmeterNames.clear();
        meterCount = 0;
        primaryMeterName = null;

        updateMeterSummary();
        updateSubmeterSummary();
    }





    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientSignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSubmeterButton;
    private javax.swing.JButton addmeterButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField contactnoField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel meterSummaryLabel;
    private javax.swing.JTextField meternameField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField passField;
    private javax.swing.JComboBox<String> selectLoc;
    private javax.swing.JComboBox<String> selectMeterType;
    private javax.swing.JTextField submeternameField;
    private javax.swing.JLabel submetersSummary;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel totalMeterLabel;
    private javax.swing.JLabel totalSubmeters;
    // End of variables declaration//GEN-END:variables
}
