/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import javax.swing.*;
import javax.swing.JOptionPane;
import queries.Client;
import queries.UserState;
import queries.SharedData;
import java.time.LocalDate;
import java.util.List;
/**
 *
 * @author Rica Mae
 */
public class ClientBulk extends javax.swing.JFrame {
    Client client = new Client();
    private static String meterType = "";
    private boolean isMeterRunning = false; 
    private Timer timer;  
    private int meterID = SharedData.meterID; 
    private DefaultListModel<String> meterList;
    private int submeterID;

    /**
     * Creates new form ClientBulk
     */
    public ClientBulk() {
        if (!UserState.isVerified) {
            JOptionPane.showMessageDialog(this, "You must log in first!", "Login Required", JOptionPane.WARNING_MESSAGE);
            dispose();
            return;
        }
        
        submeterID = 0;
        meterType = client.getMeterType(SharedData.clientID);
        meterID = client.getMeterID(SharedData.clientID);
        
        meterList = new DefaultListModel<>();
        loadMeterList();
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        BulkPane = new javax.swing.JPanel();
        welcomeBulk = new javax.swing.JLabel();
        submeterNameField = new javax.swing.JTextField();
        addSubmeter = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dateBulk = new javax.swing.JLabel();
        prevSub = new javax.swing.JLabel();
        currentSub = new javax.swing.JLabel();
        switchCom = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JSeparator();
        submetername = new javax.swing.JLabel();
        scrollList = new javax.swing.JScrollPane();
        scrollPane = new javax.swing.JScrollPane();
        submeterList = new javax.swing.JList<>();
        mainMeterLabel = new javax.swing.JLabel();
        prevMain = new javax.swing.JLabel();
        currentMain = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(901, 597));

        tabbedPane.setBackground(new java.awt.Color(102, 102, 102));
        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneStateChanged(evt);
            }
        });

        BulkPane.setBackground(new java.awt.Color(0, 204, 204));

        welcomeBulk.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        welcomeBulk.setForeground(new java.awt.Color(255, 255, 255));
        welcomeBulk.setText("WELCOME");

        addSubmeter.setText("ADD METER");
        addSubmeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubmeterActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Submeter Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("METER USAGE");

        dateBulk.setForeground(new java.awt.Color(0, 0, 0));
        dateBulk.setText("Date Today: ");

        prevSub.setForeground(new java.awt.Color(0, 0, 0));
        prevSub.setText("Previous Reading:");

        currentSub.setForeground(new java.awt.Color(0, 0, 0));
        currentSub.setText("Current Reading:");

        switchCom.setText("Start Meter");
        switchCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchComActionPerformed(evt);
            }
        });

        submetername.setForeground(new java.awt.Color(0, 0, 0));
        submetername.setText("Submeter Name:");

        submeterList.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submeterList.setModel(meterList);
        submeterList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                submeterListValueChanged(evt);
            }
        });
        scrollPane.setViewportView(submeterList);

        scrollList.setViewportView(scrollPane);

        mainMeterLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mainMeterLabel.setForeground(new java.awt.Color(0, 0, 0));
        mainMeterLabel.setText("Main Meter");

        prevMain.setForeground(new java.awt.Color(0, 0, 0));
        prevMain.setText("Previous Reading:");

        currentMain.setForeground(new java.awt.Color(0, 0, 0));
        currentMain.setText("Current Reading:");

        javax.swing.GroupLayout BulkPaneLayout = new javax.swing.GroupLayout(BulkPane);
        BulkPane.setLayout(BulkPaneLayout);
        BulkPaneLayout.setHorizontalGroup(
            BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BulkPaneLayout.createSequentialGroup()
                .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(BulkPaneLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jSeparator2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BulkPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(welcomeBulk, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BulkPaneLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BulkPaneLayout.createSequentialGroup()
                                .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BulkPaneLayout.createSequentialGroup()
                                        .addComponent(switchCom)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BulkPaneLayout.createSequentialGroup()
                                        .addGap(0, 2, Short.MAX_VALUE)
                                        .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(BulkPaneLayout.createSequentialGroup()
                                                .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(currentMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(prevMain, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                                                .addGap(53, 53, 53)
                                                .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(prevSub, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(currentSub, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(BulkPaneLayout.createSequentialGroup()
                                                .addComponent(mainMeterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(submetername, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(38, 38, 38)))))
                                .addComponent(scrollList, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BulkPaneLayout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(addSubmeter)
                                        .addGap(26, 26, 26))
                                    .addGroup(BulkPaneLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(BulkPaneLayout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(submeterNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(BulkPaneLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateBulk, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(24, 24, 24))
        );
        BulkPaneLayout.setVerticalGroup(
            BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BulkPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeBulk, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BulkPaneLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submeterNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addSubmeter, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BulkPaneLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(scrollList, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BulkPaneLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(dateBulk, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submetername, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainMeterLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prevSub, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prevMain))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BulkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(currentSub, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(currentMain))
                        .addGap(14, 14, 14)
                        .addComponent(switchCom)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(223, Short.MAX_VALUE))
        );

        switchCom.setEnabled(false);

        tabbedPane.addTab("BULK", BulkPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 162, Short.MAX_VALUE)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSubmeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubmeterActionPerformed
        String meterName = submeterNameField.getText().trim();
        if (meterName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a meter name.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
                addNewMeter(meterName); 
                submeterNameField.setText(""); 
            }

        loadMeterList();
    }//GEN-LAST:event_addSubmeterActionPerformed

    private void switchComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchComActionPerformed
        if (submeterList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "Please select a meter first!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (switchCom.isSelected()) {
            switchCom.setText("METER RUNNING");
            isMeterRunning = true;
            startMeter(); 
        } else {
            switchCom.setText("METER STOPPED");
            isMeterRunning = false;
            stopMeter(); 
        }
    }//GEN-LAST:event_switchComActionPerformed

    private void submeterListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_submeterListValueChanged
        if (!evt.getValueIsAdjusting()) { 
            String selectedSubmeterName = submeterList.getSelectedValue(); // Get selected submeter name
            if (selectedSubmeterName != null) {
                int clientID = SharedData.clientID;
                int submeterID = client.getSubmeterIDByName(meterID, selectedSubmeterName); // Get submeter ID

                if (submeterID > 0) {
                    // Get meter readings for the selected submeter
                    double[] readings = client.getSubmeterReadings(submeterID);

                    submetername.setText("Meter Name: " + selectedSubmeterName); // Display submeter name
                    prevSub.setText("Previous Reading: " + readings[0]); // Display previous reading
                    currentSub.setText("Current Reading: " + readings[1]); // Display current reading

                    switchCom.setEnabled(true); // Enable the toggle button
                } else {
                    JOptionPane.showMessageDialog(this, "Submeter ID not found for selected submeter.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_submeterListValueChanged

    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged
        int clientID = SharedData.clientID;
        String clientName = client.getClientName(clientID);

        welcomeBulk.setText("Welcome, " + clientName + "!");
        loadMeterReadings(meterID);
    }//GEN-LAST:event_tabbedPaneStateChanged

    /**
     * @param args the command line arguments
     */
    
    public void loadMeterReadings(int clientID) {
        dateBulk.setText("Date Today: " + LocalDate.now().toString());

        timer = new Timer(1000, event -> {
            double[] readings = client.getMeterReadings(clientID);
            prevMain.setText("Previous Reading: " + readings[0]);
            currentMain.setText("Current Reading: " + readings[1]); 
            client.updateMainMeterReading(meterID);
        });
        timer.start();

        
    }
    
    private void addNewMeter(String meterName) {
        client.addSubmeter(meterID, meterName); 
        loadMeterList(); 
    }
    
    private void loadMeterList() {
        int clientID = SharedData.clientID;
        meterList.clear(); 
        List<String> meters = client.getSubmetersByMeterID(meterID); 
        for (String meter : meters) {
            meterList.addElement(meter); 
        }
    }
    
    private void startMeter() {
        if (submeterList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(this, "Please select a meter first!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        isMeterRunning = true;
        switchCom.setText("Stop Meter");

        String selectedMeter = submeterList.getSelectedValue();
        int selectedMeterID = client.getSubmeterIDByName(meterID, selectedMeter);

        if (selectedMeterID > 0) {
            submeterID = selectedMeterID;
        } else {
            JOptionPane.showMessageDialog(this, "Error retrieving meter ID!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        timer = new Timer(1000, event -> {
            double[] readings = client.getSubmeterReadings(submeterID);
            readings[1] += 0.5; 
            client.updateSubCurrentReading(submeterID, readings[1]); 
            client.updateMainMeterReading(meterID);

            currentSub.setText("Current Reading: " + readings[1]);
        });
        timer.start();
    }


    private void stopMeter() {
        isMeterRunning = false;
        switchCom.setText("Start Meter");
        if (timer != null) {
            timer.stop();
        }
    }

    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientBulk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientBulk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientBulk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientBulk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientBulk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BulkPane;
    private javax.swing.JButton addSubmeter;
    private javax.swing.JLabel currentMain;
    private javax.swing.JLabel currentSub;
    private javax.swing.JLabel dateBulk;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel mainMeterLabel;
    private javax.swing.JLabel prevMain;
    private javax.swing.JLabel prevSub;
    private javax.swing.JScrollPane scrollList;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JList<String> submeterList;
    private javax.swing.JTextField submeterNameField;
    private javax.swing.JLabel submetername;
    private javax.swing.JToggleButton switchCom;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JLabel welcomeBulk;
    // End of variables declaration//GEN-END:variables
}
